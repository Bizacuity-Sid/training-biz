SELECT *
FROM payments 
  WHERE amount > (SELECT AVG(amount)*2 FROM payments);


64.What is the percentage value of each product in inventory sorted by the highest percentage first
WITH compare AS
(
  SELECT SUM(buyprice*quantityinstock) AS s FROM products
)
SELECT (p.buyprice*p.quantityinstock / compare.s*100) AS percentageshare,p.productname
FROM products p,
     compare
ORDER BY (p.buyprice*p.quantityinstock / compare.s*100) DESC;


65.Compute the revenue generated by each customer based on their orders. Also, show each customer's revenue as a percentage of total revenue. Sort by customer name.
WITH compare AS
(
  SELECT SUM(priceeach*quantityordered) AS s FROM orderdetails
)
SELECT SUM(od.priceeach*od.quantityordered) AS revenue,
       c.customername,
       (SUM(od.priceeach*od.quantityordered) / avg(compare.s)*100) AS revenueshare
FROM orderdetails od inner join orders o on od.ordernumber=o.ordernumber
inner join customers c on o.customernumber=c.customernumber,compare
GROUP BY c.customername
ORDER BY c.customername;


66.Compute the profit generated by each customer based on their orders. Also, show each customer's profit as a percentage of total profit. Sort by profit descending.
WITH compare AS
(
  SELECT SUM((od.priceeach - p.buyprice)*od.quantityordered) AS s
  FROM orderdetails od
    INNER JOIN products p ON od.productcode = p.productcode
)
SELECT SUM((od.priceeach - p.buyprice)*od.quantityordered) AS profit_generated,
       c.customername,
       SUM((od.priceeach - p.buyprice) *od.quantityordered)/ AVG(compare.s)*100 AS profitshare
FROM products p
  RIGHT JOIN orderdetails od ON p.productcode = od.productcode
  RIGHT JOIN orders o ON od.ordernumber = o.ordernumber
  RIGHT JOIN customers c ON o.customernumber = c.customernumber,compare
GROUP BY c.customername
ORDER BY SUM((od.priceeach - p.buyprice)*od.quantityordered) DESC ;